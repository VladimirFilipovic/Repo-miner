Ime - klasifikacija

antontutoveanu - QKD
Infleqtion - QML
ionq - TOOLING
Q-solvers- shor


"repo1": "import crystal 1 ind fo transform make ind get hash pk read 32 random value 0 255 32 byte array web cryptographically strong random value concatenate form ind private key pk h pk 2 encrypt random 32 byte web cryptographically strong random value hash 256 hash pk 256 hash 512 generate c hash 256 hash ch shake 256 output c s 3 decrypt extract pk z secret key public key 256 hash ind decrypt hash 512 ind encrypt compare c hash c 256 hash ch shake 256 hash z ch shake 256 generates public private key secure public key encryption scheme underlying random byte seed web cryptographically strong random value hash 512 generate public matrix already form sample secret sample noise e perform number theoretic transform secret perform number theoretic transform error noise e reduction key computation e pk calculate reduction calculate addition e reduction encode key public key turn polynomial byte array append public seed private key turn polynomial byte array encryption function secure public key encryption scheme underlying decode public key generate transpose public matrix sample random vector r sample error vector sample perform number theoretic transform random vector r reduction encrypt computation r u pk r v calculate r perform inverse number theoretic transform r calculate addition decode message calculate pk r perform inverse number theoretic transform pk r calculate addition calculate addition reduction reduction compress return decryption function secure public key encryption scheme underlying extract vector polynomial serializes polynomial array byte return q q else coefficient polynomial 0 127 get two coefficient entry polynomial convert 2 coefficient 3 byte byte mod 256 input output value 0 255 de array byte polynomial represents inverse convert polynomial 32 byte message represents inverse convert 32 byte message polynomial element 0 65535 deterministically generates matrix transpose seed entry matrix polynomial look uniformly random performs rejection sampling output extendable output function set transposed matrix obtain seed j seed j depending code output 672 byte length run rejection sampling output 504 result representation keep track index output array sampling function polynomial filled yet mod q entry take last 168 byte byte array run sampling function additional mod q polynomial coefficient many coefficient accepted output starting last position output array first sampling function 256 reached fill rest array additional coefficient full update index run rejection sampling uniform random byte generate uniform random integer modulo q documentation j compute increment input buffer index 3 le 3329 assign increment position output array return polynomial representation ideally return 256 sample sample polynomial deterministically seed nonce output polynomial close centered binomial distribution parameter 2 provides pseudo random function return byte array length l using provided key nonce instantiate underlying hash function 128 long byte array computes polynomial coefficient distributed according centered binomial distribution parameter given array uniformly random byte return 32 bit unsigned integer loaded byte x performs number theoretic transform input standard order output bit reversed order 128 64 32 16 8 4 2 0 element subsection 128 64 32 16 8 4 2 starting offset compute modular multiplication zeta element subsection mod q overwrite element subsection opposite subsection element minus add back opposite subsection performs multiplication followed reduction return 16 bit integer congruent b r 1 mod q reduce applies reduction coefficient polynomial computes reduction given integer return integer congruent mod q 0 q computes reduction given 32 bit integer return r 1 mod q r 2 16 performs place conversion coefficient polynomial normal domain domain let f 1 32 0 change need updated multiplies element polynomial vector b accumulates result r multiplies 2 16 performs multiplication two polynomial number theoretic transform domain performs multiplication polynomial x x 2 zeta used multiplication element number theoretic transformation domain add two polynomial subtracts two polynomial performs inverse number theoretic transform multiplication factor 2 16 input bit reversed order output standard order compress serializes vector polynomial 4 352 compress subsequently serializes polynomial de serializes decompresses vector polynomial represents approximate inverse since compression result decompression may match original vector polynomial applies conditional subtraction q coefficient polynomial 3329 convert 0 return q q else result negative integer push left signed bit right position operation signed 32 bit add q back left bit 0 positive number de serializes subsequently decompresses polynomial representing approximate inverse note compression thus decompression match original input needed reference function n let end 128 let start 127 n end n start return n n end n n 129 n n 256 n start n return n n start n n 128 n n 256 n end n return n function n n n 256 return n bit operation done must 0 calculates signed 32 bit need convert compare two array return 1 0 check array length check content test run function read value ct s console log length seems array string line case 100 total test s equal c success symmetric key generate public private key pair pk generate random 256 bit symmetric key s encapsulation c obtain symmetric key return 1 symmetric key export function index entry point import crystal 1 ind fo transform make ind get hash pk read 32 random value 0 255 32 byte array web cryptographically strong random value concatenate form ind private key pk h pk 2 encrypt random 32 byte web cryptographically strong random value hash 256 hash pk 256 hash 512 generate c hash 256 hash ch shake 256 output c s 3 decrypt extract pk z ind decrypt hash 512 ind encrypt compare c hash c 256 hash ch shake 256 hash z ch shake 256 generates public private key secure public key encryption scheme underlying random byte seed web cryptographically strong random value hash 512 generate public matrix already form sample secret sample noise e perform number theoretic transform secret perform number theoretic transform error noise e reduction key computation e pk calculate reduction calculate addition e reduction encode key public key turn polynomial byte array append public seed private key turn polynomial byte array encryption function secure public key encryption scheme underlying decode public key generate transpose public matrix sample random vector r sample error vector sample perform number theoretic transform random vector r reduction encrypt computation r u pk r v calculate r perform inverse number theoretic transform r calculate addition decode message calculate pk r perform inverse number theoretic transform pk r calculate addition calculate addition reduction reduction compress return decryption function secure public key encryption scheme underlying extract vector polynomial serializes polynomial array byte return q q else coefficient polynomial 0 127 get two coefficient entry polynomial convert 2 coefficient 3 byte byte mod 256 input output value 0 255 de array byte polynomial represents inverse convert polynomial 32 byte message represents inverse convert 32 byte message polynomial element 0 65535 deterministically generates matrix transpose seed entry matrix polynomial look uniformly random performs rejection sampling output extendable output function set transposed matrix obtain seed j seed j depending code output 672 byte length run rejection sampling output result representation keep track index output array sampling function polynomial filled yet mod q entry take last 168 byte byte array run sampling function additional mod q polynomial coefficient many coefficient accepted output starting last position output array first sampling function 256 reached fill rest array additional coefficient full update index run rejection sampling uniform random byte generate uniform random integer modulo q documentation j compute increment input buffer index 3 le 3329 assign increment position output array return polynomial representation ideally return 256 sample polynomial deterministically seed nonce output polynomial close centered binomial distribution parameter 3 sample polynomial deterministically seed nonce output polynomial close centered binomial distribution parameter 2 provides pseudo random function return byte array length l using provided key nonce instantiate underlying hash function 128 long byte array computes polynomial coefficient distributed according centered binomial distribution parameter given array uniformly random byte computes polynomial coefficient distributed according centered binomial distribution parameter given array uniformly random byte return 32 bit unsigned integer loaded byte x return 32 bit unsigned integer loaded byte x performs number theoretic transform input standard order output bit reversed order 128 64 32 16 8 4 2 0 element subsection 128 64 32 16 8 4 2 starting offset compute modular multiplication zeta element subsection mod q overwrite element subsection opposite subsection element minus add back opposite subsection performs multiplication followed reduction return 16 bit integer congruent b r 1 mod q reduce applies reduction coefficient polynomial computes reduction given integer return integer congruent mod q 0 q computes reduction given 32 bit integer return r 1 mod q r 2 16 performs place conversion coefficient polynomial normal domain domain let f 1 32 0 change need updated multiplies element polynomial vector b accumulates result r multiplies 2 16 performs multiplication two polynomial number theoretic transform domain performs multiplication polynomial x x 2 zeta used multiplication element number theoretic transformation domain add two polynomial subtracts two polynomial performs inverse number theoretic transform multiplication factor 2 16 input bit reversed order output standard order compress serializes vector polynomial parse 0 3328 0 1023 convert 4 12 bit coefficient 0 3328 5 8 bit byte 0 255 48 bit 40 bit per block compress subsequently serializes polynomial de serializes decompresses vector polynomial represents approximate inverse since compression result decompression may match original vector polynomial applies conditional subtraction q coefficient polynomial 3329 convert 0 return q q else result negative integer push left signed bit right position operation signed 32 bit add q back left bit 0 positive number de serializes subsequently decompresses polynomial representing approximate inverse note compression thus decompression match original input needed reference function n let end 128 let start 127 n end n start return n n end n n 129 n n 256 n start n return n n start n n 128 n n 256 n end n return n function n n n 256 return n bit operation done must 0 calculates signed 32 bit need convert compare two array return 1 0 check array length check content test run function read value ct s console log length seems array string line case 100 total test s equal c success symmetric key generate public private key pair pk generate random 256 bit symmetric key s encapsulation c obtain symmetric key return 1 symmetric key export function index entry point import crystal 1 ind fo transform make ind get hash pk read 32 random value 0 255 32 byte array web cryptographically strong random value concatenate form ind private key pk h pk 2 encrypt random 32 byte web cryptographically strong random value hash 256 hash pk 256 hash 512 generate c hash 256 hash ch shake 256 output c s 3 decrypt extract pk z ind decrypt hash 512 ind encrypt compare c hash c 256 hash ch shake 256 hash z ch shake 256 generates public private key secure public key encryption scheme underlying random byte seed web cryptographically strong random value hash 512 generate public matrix already form sample secret sample noise e perform number theoretic transform secret perform number theoretic transform error noise e reduction key computation e pk calculate reduction calculate addition e reduction encode key public key turn polynomial byte array append public seed private key turn polynomial byte array encryption function secure public key encryption scheme underlying decode public key generate transpose public matrix sample random vector r sample error vector sample perform number theoretic transform random vector r reduction encrypt computation r u pk r v calculate r perform inverse number theoretic transform r calculate addition decode message calculate pk r perform inverse number theoretic transform pk r calculate addition calculate addition reduction reduction compress return decryption function secure public key encryption scheme underlying extract vector polynomial serializes polynomial array byte return q q else coefficient polynomial 0 127 get two coefficient entry polynomial convert 2 coefficient 3 byte byte mod 256 input output value 0 255 de array byte polynomial represents inverse convert polynomial 32 byte message represents inverse convert 32 byte message polynomial element 0 65535 applies reduction coefficient polynomial deterministically generates matrix transpose seed entry matrix polynomial look uniformly random performs rejection sampling output extendable output function set transposed matrix obtain seed j seed j depending code output 672 byte length run rejection sampling output 504 result representation keep track index output array sampling function polynomial filled yet mod q entry take last 168 byte byte array run sampling function additional mod q polynomial coefficient many coefficient accepted output starting last position output array first sampling function 256 reached fill rest array additional coefficient full update index run rejection sampling uniform random byte generate uniform random integer modulo q documentation j compute increment input buffer index 3 le 3329 assign increment position output array return polynomial representation ideally return 256 sample sample polynomial deterministically seed nonce output polynomial close centered binomial distribution parameter 2 provides pseudo random function return byte array length l using provided key nonce instantiate underlying hash function 128 long byte array computes polynomial coefficient distributed according centered binomial distribution parameter given array uniformly random byte return 32 bit unsigned integer loaded byte x performs number theoretic transform input standard order output bit reversed order 128 64 32 16 8 4 2 0 element subsection 128 64 32 16 8 4 2 starting offset compute modular multiplication zeta element subsection mod q overwrite element subsection opposite subsection element minus add back opposite subsection performs multiplication followed reduction return 16 bit integer congruent b r 1 mod q reduce applies reduction coefficient polynomial computes reduction given integer return integer congruent mod q 0 q computes reduction given 32 bit integer return r 1 mod q r 2 16 performs place conversion coefficient polynomial normal domain domain let f 1 32 0 change need updated multiplies element polynomial vector b accumulates result r multiplies 2 16 performs multiplication two polynomial number theoretic transform domain performs multiplication polynomial x x 2 zeta used multiplication element number theoretic transformation domain add two polynomial subtracts two polynomial performs inverse number theoretic transform multiplication factor 2 16 input bit reversed order output standard order compress serializes vector polynomial parse 0 3328 0 1023 convert 4 12 bit coefficient 0 3328 5 8 bit byte 0 255 48 bit 40 bit per block compress subsequently serializes polynomial de serializes decompresses vector polynomial represents approximate inverse since compression result decompression may match original vector polynomial applies conditional subtraction q coefficient polynomial 3329 convert 0 return q q else result negative integer push left signed bit right position operation signed 32 bit add q back left bit 0 positive number de serializes subsequently decompresses polynomial representing approximate inverse note compression thus decompression match original input needed reference function n let end 128 let start 127 n end n start return n n end n n 129 n n 256 n start n return n n start n n 128 n n 256 n end n return n function n n n 256 return n bit operation done must 0 calculates signed 32 bit need convert compare two array return 1 0 check array length check content test run function read value ct s console log length seems array string line case 100 total test s equal c success symmetric key generate public private key pair pk generate random 256 bit symmetric key s encapsulation c obtain symmetric key return 1 symmetric key export function index entry point",



"repo2" :  "bin bin bin start identifying file covered run check individual file print warning file covered check coverage provided argument check modular coverage bin bin bin bin bin bin directory save result data file header data format iterate entry cache identify cyclic group order polynomial exponent retrieve code parameter report code outperform surface code save code data file bin minimum cyclic group order ignore code lower encoding rate code distance calculation construct code check whether already data code know distance encoding rate low nothing compute save code parameter enforce torus width height reflection x axis reflection axis trivial polynomial trivial polynomial run multiple job parallel bin identify code saved initialize database loop group base code collect data list trivial code ignore save data database bin per choice group code distance calculation subset group large enough many element bit base code random quantum tanner code given input data exist already data code nothing construct random code compute parameter save code computed parameter run multiple job parallel iterate combination group base code sample index submit job job queue one instance random quantum tanner code namely one group need one sample bin group group member cover explicitly provided name override group name identify field working keep track group member multiplication table generate member group build group multiplication table convert multiplication table 2 array dictionary permutation index group member identify generating permutation build group group member equal inverse pair group member inverse sound dangerous bear cover always add group member inverse count many extra group member found correct number group member done overshot throw away member get right size remove element group algebra cover multiply coefficient multiply group member collect multiply pair term self cover cover element valued matrix identify base group simple named group build lift manually faster identify method combine two cyclic matrix build lift manually faster 1 j k 1 j base 3 k special linear projective special linear group construct linear representation group group element permute element vector space generating matrix act identify target space group member matrix act nonzero vector remove zero vector identify generator permute element target space represent group member permute element group construct linear representation group group element permute element vector space generating matrix act identify multiplicative root unity identify target space group member matrix act nonzero vector modded root unity remove orbit zero vector identify generator permute element target space construct lift identical linear representation represent group member permute element group product group different field result group binary field fail construct valid invalid group index everything work expected retrieve group structure retrieve result cache available compute result save cache use cache save retrieve result save result cache check cache retrieve result variable constraint objective minimizing number nonzero variable constraint decoding problem matrix solution syndrome mod q solve optimization problem raise error optimization failed return solution problem variable identify largest power q needed relaxation decode trinary field data bit precede check bit generating data geometric data assert generating subset symmetric save generating data asked bipartite complex run validity check identify identity element identify set node still need add edge build graph one node time identify node already covered new node may need cover add type b type edge adjacent node boundary operator defined group algebra keep track base group check either none operator defined group algebra identify base field group boundary operator chain complex identify boundary operator chain complex ignore complexity check fill zero block total boundary operator fill nonzero block total boundary operator type ignore assignment type type ignore type raise error trying build complex non symmetric generating set quadripartite complex complex may bipartite quadripartite tensor product one complex tensor product two complex dual tensor product one complex group algebra invalid chain complex construction parity check matrix column nonzero generally column maximal set linearly independent string collect together string whose first nonzero element 1 rank repetition hamming code independent field cover template error correcting code class support sparse parity check matrix classical code add code concatenation distance dimension 0 code undefined know exact code distance return know exact code distance return find distance given vector code word effective syndrome trivial actual syndrome nonzero overlap random word construct effective check matrix random nonzero word find low weight candidate code word check whether found valid candidate remove type ignore assignment type ignore assignment quantum code add code concatenation investigate weight reduction org ab 2402 05228 add method figure whether code see com question 15432 also compute store sub code also add implement standard method like etc nonzero wherever check address remember order field use operator appropriate generalize local deformation see org ab quant 0408190 manually method may modify logical operator computed keep track current location row reduce identify pivot x sector move x pivot back row reduce identify pivot z sector move z pivot back identify x pivot z pivot parity check run sanity check identify section column construct x pivot logical operator construct z pivot logical operator move back original location reshape return x type parity check measuring z type error z type parity check measuring x type error parameter n k distance dimension 0 code undefined know exact code distance return know exact distance compute save exact distance return define computing x distance find distance given vector logical x type operator know exact code distance return construct effective syndrome support string trivial syndrome support candidate type logical operator check whether decoding successful return hamming weight logical operator requested retrieve logical operator one type manually method may modify logical operator computed identify check matrix x z type parity check current location row reduce check matrix x type error move pivot back row reduce check matrix z type error move pivot back run sanity check identify section column construct logical x operator construct logical z operator move back original location generate random logical ops find one nontrivial commutation relation type ignore type effective check matrix syndrome logical operator type ignore type enforce new logical operator commute everything except dual classical code test invalid classical code construction construct code generator matrix puncture code shortening repetition code yield trivial code quantum code test conjugate first code test test logical operator dual trivial syndrome verify consistency construct reduce logical operator code complete check reducing logical operator weight supported prime number field assert identity logical operator empty quantum code distance infinity bicycle code map sector 0 1 x z coordinate map j b represented array example notebook featuring code identify symbol used denote cyclic group generator identify cyclic group order symbol polynomial enforce minimum number symbol adding placeholder necessary identify group generator associated symbol requested transform r sector build defining matrix generalized bicycle code evaluate simple case evaluate product polynomial cover connected tanner graph baseline requirement mapping exist identify individual term polynomial find combination term enable layout identify torus shape mapping figure shift sector 0 l 1 r data x z check l data r data x check z check identify map sector loop x type z type parity check identify old new parity check tensor old check matrix data permuted permute data data sector 0 1 permute check check sector x z save new check tensor parity check matrix identify parity check matrix identify need examine check periodic boundary look need consider one otherwise generally need consider build array map coordinate coordinate sector set relative coordinate organized stabilizer type organize check torus loop need consider identify location check support stabilizer identify relative position data addressed check relative position data check account periodic boundary condition applicable record relative position lifted product code use matrix based product identify x sector z sector parity check identify number sector identify conjugate transform construct nontrivial block final parity check matrix construct x sector z sector parity check matrix start product input graph fix edge orientation tag edge identify sector two node identify data v check node sector start x type operator switch z type operator check 0 1 sector account minus sign 0 0 sector z type conjugated code flip x z operator 1 1 sector relabel node remember order field use operator appropriate identify x sector z sector parity check identify number sector identify conjugate transform quantum tanner code investigate construction lifted product code see section 7 org ab 2206 07571 also science 04206478 document example notebook featuring code identify identity element identify set node still need add face build one node time identify node already covered new node may need cover add face adjacent node convert subset array create save directory necessary write provided header write subset write seed code write data load miscellaneous data load integer array separated comment construct subset generating code common quantum code save known distance transformed rotated surface code transform checkerboard pattern original surface code exclude exterior corner tile touch one data x type parity check top bottom boundary z type parity check left right boundary save known distance transformed rotated code transform checkerboard pattern original code save known distance find link source build chain complex one link time reduce computational overhead remove chain link care last code table ii 2311 16980 144 12 12 code table 3 figure 2 2308 07915 check every check address neighboring data check case one symbol check case mapping code 2 symbol unsupported fail match cyclic group order free variable check lifted product code indeed smaller code check total number construct check matrix directly construct lifted product code construction chain complex random quantum tanner code assert right number node edge node degree raise error generating data raise error seed code different field saving loading save file fail load file load file ordinary original surface code rotated surface code test rotated surface code conjugate true code ordinary original code check minimal logical operator weight rotated code rotated code must even side length rotated code recover ordinary surface code recover ordinary code surface code code run gap command identify base field retrieve parity check strip cache wrapper gap installed guava installed code recognized guava access get page group access extract section specified group extract first link section return desired group extract order index group indexed org load web page specified group access extract section generator go first copy able text isolate generator text build generator decrement integer cycle 1 account 0 indexing run gap command collect generator extract list cycle cycle tuple integer decrement integer cycle 1 account 0 indexing get page group access structure cached retrieve try retrieve structure gap return name group strip cache wrapper define global testing variable disable line long disable line long connect general webpage find group index find link group webpage everything work expected group indexed group found find generator everything work expected gap installed extract cycle string group recognized gap everything work expected retrieve gap retrieve org fail retrieve anywhere fail determine group number retrieve gap retrieve org retrieve structure cache fail retrieve structure gap retrieve structure gap gap installed",


"repo3": "copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license read sanity check instruction release 1 create distribution python setup 2 check distribution twine check dist 3 upload test twine upload repository test org legacy dist 4 visit test org project check install need install requirement since test pip install r requirement followed pip instruction website pip install test org simple 5 upload prod twine upload dist 6 confirm org project test install using pip copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license coverage ignore copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license coverage ignore copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license coverage ignore copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license get source parse transform function via transform creates outer function call return transformed function pattern used correctly capture closure convert back get code preserving annotation write temp file new source code import new code temp module get outer function call returning inner function disable callable set inner function correct closure disable callable exception chain exception way indicated original file line number given come decorator remove replace function outer function along inner function build appropriate block set inner original function similarly decorator coverage ignore copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license register get op act like real one use method captured assign copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license coverage ignore copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license build style decorator build style decorator style decorator style decorator technically case since decorator expression expression could evaluate style matching decorator found copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license 1 adding two index start 1 0 copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license make test robust actual line appears test code generated code test coverage ignore make test robust actual line appears test code call call copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license coverage ignore copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license coverage ignore copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license coverage ignore copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license coverage ignore type ignore copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license block context always append statement creation copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license file testing line space sensitive line code defined matter test need add new test code please add end disable wrong import position disable wrong import position disable wrong import position disable wrong import position copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license could walk parent node line number like load seems like always child node supply relevant line map info copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license easy way check node equality check type copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license end digit try replace integer copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license changed thing return outside expression copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license read sanity check instruction release 1 create distribution python setup 2 check distribution twine check dist 3 upload test twine upload repository test org legacy dist 4 visit test org project check install need install requirement since test pip install r requirement assuming also updated pip install test org simple else pip install finally pip install r requirement followed pip instruction website pip install test org simple 5 upload prod twine upload di st 6 confirm org project test install using pip copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license order insures different strategy produce different moment structure normally would throw statement support protocol supported however evaluates give single statement copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license clean gate class otherwise show subclass gate interfere test clean gate class otherwise show subclass gate interfere test copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license zero gate single gate constant single gate class single function two gate constant two gate class two gate function three gate constant three gate class n gate class n gate function noise class noise function special function special single gate class special two gate class special n gate class copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license private gate ask private parent gate private gate testing gate feature gate contrib gate contrib removed case removed google gate google remove case removed disable callable disable callable copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2022 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2022 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license coverage ignore type ignore type currently work copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license 2 0 1 equality copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license copyright 2021 developer licensed apache license version 2 0 license may use file except compliance license may obtain copy license apache org license license 2 0 unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license",


    "repo4": "include include h include h include h include h include h include h include h include h include h include h include h include h freq j spin else else alp ham alp ham else define include h include h include h include h include h include h include h include h include h include h include h include h include h created 03 01 17 define include limit include include include h include h base class susceptibility operator precision floating point precision avg average value zero frequency correction operator average value spin operator precision floating point precision avg average value spin operator default consider paramagnetic system average spin 0 specific model type state occupation basis state iii orbital model model instance return value total spin site iii basis state state 0 5 return operator name charge operator precision floating point precision specific model type state occupation basis state iii orbital model model instance return value total charge site iii basis state state general class local susceptibility calculation default local green function computed array orbital pair supplied input file group instance type mesh type frequency mesh either alp alp additional parameter mesh mesh alp statistic green function type p parameter h instance additional parameter mesh example mesh alp statistic evaluate green function computed calculate diagonal part find unique index diagonal part check two local required compute two particle green function specific operator op op type operator either pointer operator average value null default average used specific operator reset 0 check least one value computed get compute partition function init operator loop pair skipped factor normalize green function compute zero frequency contribution compute non local correction evaluates static correction zero frequency operator type op operator computes non local green function symmetrized averaged 0 5 evaluates static correction zero frequency operator type op operator copy diagonal g completeness compute local green function op type operator system op operator pair current pair compute symmetrized continued fraction computes symmetrized non local green function operator op op type operator system op operator pair current pair compute symmetrized continued fraction zero frequency contribution since green function continued fraction properly evaluate zero frequency contribution compute following sum rule chi beta chi tau 0 2 n 0 chi type operator mesh type op operator instance compute static susceptibility orbital susceptibility decay w 2 w 4 compute two largest freq point next pair well check convergence check enough frequency already sit high frequency tail regime loop non zero frequency computes zero frequency contribution real frequency mesh nothing zero frequency already correctly computed high frequency chi 2 4 current orbital freq frequency coefficient coefficient tail analytical value tail save susceptibility archive text file ar archive file path root path archive green function specific model factor cut partition function type recently computed susceptibility orbitals used diagonal green function calculation orbital pair used green function calculation brief perform operation orbital orbital action current op product expectation value aa return true particle created brief perform symmetrized operation mu first orbital action mu second orbital action current op product expectation value aa return true particle created 9 created 21 08 16 define include vector reset initial state compute next combination ordered basis value combination k n calculate number combination n n k n k calculate created 01 02 17 define include complex include alp mesh created 20 04 17 define brief class author simple matrix class class used store hopping matrix diagonal interaction p init matrix array n leading dimension average number non zero element per line add diagonal matrix element position j row number j column number value sign sign flag already data j index j element spare storage check data k state case diagonal interaction multiple possible transition state j state update existing value create new element array check exceed upper bound resize storage interaction term compensate case need remove zero element storage reduce required memory communication matrix value pointer row column index internal index non zero value number non zero element allocated memory created 20 07 16 define include vector include include h include storage h else init need parameter simple compressed row storage matrix vector product compute diagonal element current state non diagonal term calculation interaction else std 0 0 add diagonal h j element check data k state case multi orbital coulomb interaction contribution different coulomb interaction create new element array check transition current state set new state update reference matrix end created 18 08 16 define include alp general parameter symmetry parameter storage parameter parameter parameter model created 27 07 16 define include vector created 02 02 17 define include h include string include map include brief class author update event time name event name register start point event name event name print observed event return event timing pair event name return event timing registered event timing pair pair first corresponds total event time pair second corresponds last time event happened else created 28 08 16 define include alp include core brief base class define common routine binary represented state author brief check state current state state check total number spin site return 0 state empty 1 otherwise brief particle site particle current state k resulting state sign brief create particle site create particle current state k resulting state sign solve equation number lattice site number electron spin maximum number electron created 20 07 16 define include vector include alp add header double complex created 01 08 16 define include limit include include h include h include h class evaluation single particle green function type object mesh type frequency mesh either alp alp additional mesh parametrization alp green function type construct green function class calculating g c c time ordering operator default local green function computed array orbital pair supplied input file group p parameter object h instance additional parameter mesh example mesh alp statistic calculate diagonal part find unique index diagonal part check two local required evaluates green function continued fraction method eigenvalue check factor cut init green function 0 init partition function check least one value computed get compute partition function iterate pair compute factor skip eigenvalue factor smaller cutoff normalize green function save green function archive plain text file ar archive save green function path root path archive self energy equation based model specific bare green function ar archive save self energy path root path archive bare green function self energy defined grid obtain model specific bare green function store file compute local green function system pair current pair iterate orbitals diagonal green function iterate spin first going compute c c 0 need create particle current perform factorization starting vector using computed factorization compute approximation 1 z h calculation continued fraction restore symmetry sector compute c c 0 need destroy particle computes part non local green function system pair current pair create particle two different orb sum resulting vector compute contribution green function perform destroying particle restore symmetry sector computes non local green function 0 5 operator type op operator copy diagonal g completeness green function container object model solving factor cut partition function orbitals used diagonal green function calculation orbital pair used green function calculation brief perform create operator action orbitals orbital create particle spin spin particle create current op product expectation value aa return true particle created check particle annihilated brief perform annihilator operator action orbitals orbitals list destroy particle spin spin particle destroy current op product expectation value return true particle destroyed check particle annihilated v star v created 19 07 16 define include set include include include include h include symmetry h include h include h include h include h include h initialize specific model allocate storage p alp parameter fill current sector perform result stored perform call abnormal return pair computed format matrix storage pair model diagonalize created 11 01 17 define brief class author include h include h generic function save object archive saved ar archive path root path archive implementation symmetry sector implementation n symmetry sector store eigenvalue archive ham type instance h instance ar archive path root path archive store static observables archive observables map static observables ar archive root path archive created 29 07 16 define include vector include alp include alp mesh include alp include h include h include h include core check current basis vector get non zero contribution state electron state combination spin site index current basis state return 1 nonzero contribution otherwise 0 compute diagonal term transition state k state state transition state initial basis state k resulting basis state sign sign transition return contribution diagonal element transition state c c computes diagonal contribution state h state current basis state return value h deprecated return hopping transition diagonal interaction return diagonal interaction transition model orbitals interacting return total number site model spin operator h 0 return symmetry object compute bare green function specific mesh mesh mesh type bare green function container beta inverse temperature symmetry hopping interaction exchange chemical potential magnetic field site energy shift non diagonal state iterators created 01 08 16 define include alp mesh include alp include alp include basis construction v initial vector return number iteration 2 ham model symmetry sector size compute continues fraction compute symmetrized continues fraction computes complex value frequency z real frequency add small imaginary temperature dependent z delta mesh type index frequency index return proper complex representation current frequency compute smallest index frequency since continued fraction compute zero frequency green function compute first non zero treat zero frequency separately mesh type return valid smallest index frequency frequency mesh inverse temperature maximum number iteration object matrix continued fraction array computes continued fraction specific frequency number operation performed sign exponent value shift overflow avoiding shift first denominator fraction w e return value specific energy point created 17 01 17 define include alp include alp grid brief factory class frequency mesh initialization creates proper mesh object based mesh type author created 21 08 16 define include queue include alp include symmetry h include combination h pas created 23 08 16 define include alp mesh include alp include h include h particle site particle current state k resulting state sign number site create particle site create particle current state k resulting state sign number site brief check possible transition evaluate following four operator product current state number site return one transition possible brief computes new state inter orbital coulomb transition k current state k next state sign sign transition number site brief return interaction strength current spin orbital combination return single multi orbital impurity model class floating point precision fill hybridization part fill diagonal interaction term skip density density contribution computes diagonal contribution specific occupation basis state state occupation basis state return state h state deprecated check state describes valid transition basis vector state transition state occupation basis vector return 1 0 transition possible respectively perform transition state state k state k sign return contribution diagonal element model symmetry type return hybridization transition return diagonal coulomb transition impurity orbitals coulomb interaction bath non interacting return number impurity orbitals computes bare green function mesh green function frequency mesh bare green function container beta inverse temperature model symmetry number impurity orbitals coulomb interaction matrix chemical potential number bath state non interacting impurity hybridization bath bath energy level index bath kinetic part diagonal element interaction part diagonal element created 28 07 16 define include vector include include h include storage h else else init need parameter xxx trust one parallel else iteration row diagonal contribution contribution iteration column unordered transition state corresponding row column possible calculate element transition state corresponding row column possible calculate element size chunk equally put rest first thread parallel else variant serial compact int 0 compute diagonal element current state non diagonal term calculation 1 see av row matrix first restored array internal storage structure maximum size object number thread 1 serial mode chunk offset internal used filling start current row used check bit byte bitmap corresponding index model parameter add diagonal h element value v add diagonal h j element value discarded restored av fermi sign error add element j twice store sign like array one bit per sign created 23 08 16 define include include include include storage h include h include h include h else initialize inter processor communication collect data remote process array iteration diagonal contribution diagonal contribution diagonal contribution process spin contribution spin block iterate spin block iteration row iteration column waiting data received process spin hopping contribution iteration row iteration column else diagonal interaction contribution check diagonal interaction element else fill matrix current symmetry sector nothing matrix size zero hopping term fill diagonal matrix spin fill local part add diagonal contribution add diagonal contribution interaction term nothing reset storage symmetry object current symmetry sector update communicator necessary set local dimension size setup working array size spin resolved storage guarantee model spin symmetric get current symmetry sector get symmetry spin get spin dimension init hopping spin release communicator needed communicator used check data current create new communicator processor defined color update working communicator data current get rank size recently created working communicator compute size local array offset beginning local dimension spin hopping matrix spin channel local dimension whole matrix apply offset symmetry object generate proper configuration state inter processor array flag processor offset processor array data amount received index first element received else allocate memory local density density contribution diagonal contribution local dimension matrix total dimension matrix compute local dimension specific sector sector symmetry sector compute dimension return size local vector specific symmetry sector get total dimension current symmetry sector get rank size current global communicator data current compute local dimension spin channel compute return total dimension else perform operation position destroy create electron input vector output vector resulting symmetry sector destroy particle true create otherwise local dimension current vector maximal local dimension current vector dimension resulting symmetry sector dimension spin channel matrix dimension spin channel matrix synchronization flag adjust maximal local dimension communication buffer communication window iterate local part vector one sided communication try destroy create particle index within boundary check particle destroyed created compute index new state compute id local index new state avoid communication initiate one sided communication else update array check buffer boundary synchronize necessary compute v w product v bra state w state return v w product else initialize communication window data object specific offset data input array shift offset input array handle already allocated window return current working communicator finalize current execution broadcast eigenvalue necessary release window communicator set global communicator current communicator return offset 0 current current model diagonal part local spin hopping spin hopping diagonal part array store remote process communication data symmetry spin total number total number spin size offset channel local size staring index interaction global communicator current working communicator offset current inter process communication auxiliary array communication window find current matrix size working communicator find smallest largest index current spin channel diagonal interaction term calculate offset index first element vector received number element received memory working array adjust index calculate local index id global index local variable fill matrix specific spin current shift spin shift configuration state 0 spin spin matrix filled define include h include alp include limit include vector include include string include class calculation static observables type object construct object static observables class p parameter object brief print static observables ham print parameter returned brief compute static observables ham return following parameter site n average number electron average number electron spin average number electron spin average magnetic moment product magnetic moment j site average double occupancy average effective dimension space e total grand canonical energy loop calculate factor skip state trivial contribution std skipped factor std sum contribution brief find largest magnitude coefficient ham pair maximum number coefficient returned trivial skip coefficient smaller number return vector pair sorted starting largest magnitude first symmetry state second coefficient else brief calculate contribution state coefficient class ham pair maximum number coefficient processed trivial skip coefficient smaller number cumulative calculate cumulative contribution class previous class return vector pair first index first state class returned second contribution class vector sorted largest coefficient class add square coefficient within class last may truncated remove brief print largest coefficient decreasing order magnitude ham pair maximum number coefficient processed trivial skip coefficient smaller number brief print contribution state coefficient class ham pair maximum number coefficient processed trivial skip coefficient smaller number cumulative calculate cumulative contribution class previous class brief compute static observables one ham pair loop basis vector calculate static variable orbital add sum process else inverse temperature factor cutoff created 21 07 16 define include h include include alp else matrix size equal 1 need perform eigenvalue 0 0 1 0 diagonalize current lout 0 return value return vector matrix vector product implemented based storage type additional routine work array necessary w working array pointer shift offset working array current matrix sector info result code perform broadcast value empty array empty return result code wrapper current dimension total matrix number eigenvalue computed number converged value compute eigenvalue reduce memory requirement else else else else template void storage float int lout int int n float int int char int comm lout n else lout n template void storage double int lout int int n double int int char int comm lout n else lout n created 19 07 16 define include alp include alp base class symmetry check possible change basis state next state return true next basis state spin return true create destroy particle specific spin return current basis state state basis state return index ordered basis specific basis state reset object initial state init symmetry object check next sector exist set current sector next available return true next state basis state created 19 07 16 define include queue include symmetry h include combination h include h symmetry class return number electron spin return number electron spin return sector dimension decide init pas created 20 04 17 define include storage h include h include h include h brief class author else fill diagonal part fill electronic part total number total number spin total number boson created 20 04 17 define include h include h include alp include h include h extract part state extract current boson n dimensional representation create boson destroy boson number bit per boson brief class author bath impurity bath bath impurity bath destroy boson create boson density term interaction term brief particle site particle current state k resulting state sign brief create particle site create particle current state k resulting state sign impurity parameter number site cluster impurity chemical potential local interaction bath bath non part non part created 01 06 17 define defines additional parameter impurity model parameter container created 20 04 17 define include symmetry h include combination h include queue include h brief class author pas",
